server {
    index index.php;
    listen 80;
    server_name localhost;
    root /var/www/project/public;
    error_log /var/log/nginx/project_error.log;
    access_log /var/log/nginx/project_access.log;
    client_max_body_size 100M;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;

    location / {
        # try to serve file directly, fallback to index.php


        try_files $uri /index.php$is_args$args;
        if ($request_method = OPTIONS ) {
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
             return 200;
            }
    }

    location /api/login_check{
    try_files $uri /index.php$is_args$args;
    if ($request_method = OPTIONS ) {
                add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                 return 200;
                }
    }

    location /api/users{
        try_files $uri /index.php$is_args$args;
        if ($request_method = OPTIONS ) {
                    add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
                    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range, Authorization' always;
                    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
                    add_header 'Access-Control-Allow-Credentials' 'true' always;
                     return 200;
                    }
        }

    location /api/offers{
            try_files $uri /index.php$is_args$args;
            if ($request_method = OPTIONS ) {
                        add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
                        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range, Authorization' always;
                        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
                        add_header 'Access-Control-Allow-Credentials' 'true' always;
                         return 200;
                        }
            }
            
    location /api/images{
                try_files $uri /index.php$is_args$args;
                if ($request_method = OPTIONS ) {
                            add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
                            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range, Authorization' always;
                            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
                            add_header 'Access-Control-Allow-Credentials' 'true' always;
                             return 200;
                            }
                }
    location /api/post_garbages{
                    try_files $uri /index.php$is_args$args;
                    if ($request_method = OPTIONS ) {
                                add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
                                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range, Authorization' always;
                                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
                                add_header 'Access-Control-Allow-Credentials' 'true' always;
                                 return 200;
                                }
                    }

    location /api/post_garbages/{
                        try_files $uri /index.php$is_args$args;
                        if ($request_method = OPTIONS ) {
                                    add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
                                    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                                    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range, Authorization' always;
                                    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
                                    add_header 'Access-Control-Allow-Credentials' 'true' always;
                                     return 200;
                                    }
                        }

    location /api/post_removals{
                        try_files $uri /index.php$is_args$args;
                        if ($request_method = OPTIONS ) {
                                    add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
                                    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                                    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range, Authorization' always;
                                    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
                                    add_header 'Access-Control-Allow-Credentials' 'true' always;
                                     return 200;
                                    }
                        }

    # optionally disable falling back to PHP script for the asset directories;
    # nginx will return a 404 error when files are not found instead of passing the
    # request to Symfony (improves performance but Symfony's 404 page is not displayed)
    # location /bundles {
    #     try_files $uri =404;
    # }

    location ~ ^/index\.php(/|$) {
        fastcgi_pass php815-service:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        client_max_body_size 100M;
        # optionally set the value of the environment variables used in the application
        # fastcgi_param APP_ENV prod;
        # fastcgi_param APP_SECRET <app-secret-id>;
        # fastcgi_param DATABASE_URL "mysql://db_user:db_pass@host:3306/db_name";

        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        # Caveat: When PHP-FPM is hosted on a different machine from nginx
        #         $realpath_root may not resolve as you expect! In this case try using
        #         $document_root instead.
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;

        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/index.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
        return 404;
    }



}